import Head from 'next/head';

export async function getStaticPaths() {
	// Call an external API endpoint to get posts
	// const res = await fetch('https://jsonplaceholder.typicode.com/posts/');
	// const posts = await res.json();

	// // Get the paths we want to pre-render based on posts
	// const paths = posts?.map((post) => ({
	// 	params: { id: post.id }
	// }));

	// Set fallback to blocking. Now any new post added post build will SSR
	// to ensure SEO. It will then be static for all subsequent requests
	return { paths: [], fallback: 'blocking' };
}
export async function getStaticProps({ params }) {
	const res = await fetch(
		`https://jsonplaceholder.typicode.com/posts/${params.id}`
	);
	const data = await res.json();
	console.log(data);
	return {
		props: {
			blog: data
		}
	};
}
function BlogPost({ blog }) {
	return (
		<>
			<Head>
				<title>{blog?.title} | My Site</title>
				<meta name="description" content="Generated by create next app" />
			</Head>
			{blog && (
				<>
					<h1>{blog?.title}</h1>
					<p>{blog?.body}</p>
				</>
			)}
		</>
	);
}

export default BlogPost;
